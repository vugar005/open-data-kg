@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();
$mat-custom: (
  50: #e0f2f1,
  100: #b2dfdb,
  200: #80cbc4,
  300: #16a085,
  400: #26a69a,
  500: #009688,
  600: #00897b,
  700: #00796b,
  800: #218c74,
  900: #004d40,
  A100: #539EC0,
  A200: #0fb9b1,
  A400: #1de9b6,
  A700: #00bfa5,
  contrast: (
    50: white,
    100: white,
    200: white,
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: white,
    A200: white,
    A400: white,
    A700: white,
  )
);
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://www.google.com/design/spec/style/color.html
/*$candy-app-primary: mat-palette('#218c74');

$candy-app-accent:  mat-palette('#16a085', A200, A100, A400);*/

//  $my-app-primary: mat-palette($mat-blue-grey);
//  $my-app-accent:  mat-palette($mat-pink, 500, 900, A100);
//  $my-app-warn:    mat-palette($mat-deep-orange);

 $my-app-primary: mat-palette($mat-custom, A100, 800, 300);
 $my-app-accent:  mat-palette($mat-pink, 500, 900, A100);
 $my-app-warn:  mat-palette($mat-yellow, A700);

// Create the theme object (a Sass map containing all of the palettes).
 $my-app-theme: mat-light-theme($my-app-primary, $my-app-accent, $my-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($my-app-theme);
